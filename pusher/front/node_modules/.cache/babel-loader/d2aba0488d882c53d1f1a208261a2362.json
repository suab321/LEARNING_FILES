{"ast":null,"code":"import _classCallCheck from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/abhinav/LEARNING_FILES/pusher/front/src/Pushere.js\";\nimport React from 'react';\n\nvar Pushere =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pushere, _React$Component);\n\n  function Pushere() {\n    var _this;\n\n    _classCallCheck(this, Pushere);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pushere).call(this));\n    _this.activate = _this.activate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Pushere, [{\n    key: \"activate\",\n    value: function activate() {\n      var tag = document.createElement('script');\n      tag.src = \"https://js.pusher.com/4.1/pusher.min.js\";\n      tag.async = true;\n      var tag1 = document.createElement('script');\n      tag1.async = true;\n      tag1.innerHTML = \" var pusher = new Pusher('your-app-key', { cluster: 'your-app-cluster' });\\n\\n        // retrieve the socket ID once we're connected\\n        pusher.connection.bind('connected', function () {\\n            // attach the socket ID to all outgoing Axios requests\\n            axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\\n        });\\n\\n        // request permission to display notifications, if we don't alreay have it\\n        Notification.requestPermission();\\n        pusher.subscribe('notifications')\\n                .bind('post_updated', function (post) {\\n                    // if we're on the home page, show an \\\"Updated\\\" badge\\n                    if (window.location.pathname === \\\"/\\\") {\\n                        $('a[href=\\\"/posts/' + post._id + '\\\"]').append('<span class=\\\"badge badge-primary badge-pill\\\">Updated</span>');\\n                    }\\n                    var notification = new Notification(post.title + \\\" was just updated. Check it out.\\\");\\n                    notification.onclick = function (event) {\\n                        window.location.href = '/posts/' + post._id;\\n                        event.preventDefault();\\n                        notification.close();\\n                    }\\n                });\";\n      document.body.appendChild(tag);\n      document.body.appendChild(tag1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Pushere;\n}(React.Component);\n\nexport default Pushere;","map":{"version":3,"sources":["/home/abhinav/LEARNING_FILES/pusher/front/src/Pushere.js"],"names":["React","Pushere","activate","bind","tag","document","createElement","src","async","tag1","innerHTML","body","appendChild","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,O;;;;;AACF,qBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,QAAL,GAAc,MAAKA,QAAL,CAAcC,IAAd,uDAAd;AAFS;AAGZ;;;;+BACS;AACN,UAAIC,GAAG,GAACC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAR;AACAF,MAAAA,GAAG,CAACG,GAAJ,GAAQ,yCAAR;AACAH,MAAAA,GAAG,CAACI,KAAJ,GAAU,IAAV;AACA,UAAIC,IAAI,GAACJ,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAT;AACAG,MAAAA,IAAI,CAACD,KAAL,GAAW,IAAX;AACAC,MAAAA,IAAI,CAACC,SAAL;AAuBIL,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,GAA1B;AACAC,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BH,IAA1B;AAEP;;;6BACO;AACJ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAxCiBT,KAAK,CAACa,S;;AA0C5B,eAAeZ,OAAf","sourcesContent":["import React from 'react';\n\nclass Pushere extends React.Component{\n    constructor(){\n        super();\n        this.activate=this.activate.bind(this);\n    }\n    activate(){\n        let tag=document.createElement('script');\n        tag.src=\"https://js.pusher.com/4.1/pusher.min.js\";\n        tag.async=true;\n        let tag1=document.createElement('script');\n        tag1.async=true;\n        tag1.innerHTML=` var pusher = new Pusher('your-app-key', { cluster: 'your-app-cluster' });\n\n        // retrieve the socket ID once we're connected\n        pusher.connection.bind('connected', function () {\n            // attach the socket ID to all outgoing Axios requests\n            axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\n        });\n\n        // request permission to display notifications, if we don't alreay have it\n        Notification.requestPermission();\n        pusher.subscribe('notifications')\n                .bind('post_updated', function (post) {\n                    // if we're on the home page, show an \"Updated\" badge\n                    if (window.location.pathname === \"/\") {\n                        $('a[href=\"/posts/' + post._id + '\"]').append('<span class=\"badge badge-primary badge-pill\">Updated</span>');\n                    }\n                    var notification = new Notification(post.title + \" was just updated. Check it out.\");\n                    notification.onclick = function (event) {\n                        window.location.href = '/posts/' + post._id;\n                        event.preventDefault();\n                        notification.close();\n                    }\n                });`\n            document.body.appendChild(tag);\n            document.body.appendChild(tag1);\n            \n    }\n    render(){\n        return(<div></div>)\n    }\n}\nexport default Pushere;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abhinav/LEARNING_FILES/pusher/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abhinav/LEARNING_FILES/pusher/front/src/Pusher.js\";\nimport React from 'react';\n\nvar Pusher =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pusher, _React$Component);\n\n  function Pusher() {\n    _classCallCheck(this, Pusher);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pusher).apply(this, arguments));\n  }\n\n  _createClass(Pusher, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var tag = document.createElement('script');\n      tag.src = \"https://js.pusher.com/4.1/pusher.min.js\";\n      var tag1 = document.createElement('script');\n      tag1.innerText = \" var pusher = new Pusher('your-app-key', { cluster: 'your-app-cluster' });\\n\\n        // retrieve the socket ID once we're connected\\n        pusher.connection.bind('connected', function () {\\n            // attach the socket ID to all outgoing Axios requests\\n            axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\\n        });\\n\\n        // request permission to display notifications, if we don't alreay have it\\n        Notification.requestPermission();\\n        pusher.subscribe('notifications')\\n                .bind('post_updated', function (post) {\\n                    // if we're on the home page, show an \\\"Updated\\\" badge\\n                    if (window.location.pathname === \\\"/\\\") {\\n                        $('a[href=\\\"/posts/' + post._id + '\\\"]').append('<span class=\\\"badge badge-primary badge-pill\\\">Updated</span>');\\n                    }\\n                    var notification = new Notification(post.title + \\\" was just updated. Check it out.\\\");\\n                    notification.onclick = function (event) {\\n                        window.location.href = '/posts/' + post._id;\\n                        event.preventDefault();\\n                        notification.close();\\n                    }\\n                });\";\n      tag.appendChild(tag1);\n      document.appendChild(tag);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Pusher;\n}(React.Component);\n\nexport default Pusher;","map":{"version":3,"sources":["/home/abhinav/LEARNING_FILES/pusher/front/src/Pusher.js"],"names":["React","Pusher","tag","document","createElement","src","tag1","innerText","appendChild","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;;;;;;;;;wCACiB;AACf,UAAIC,GAAG,GAACC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAR;AACAF,MAAAA,GAAG,CAACG,GAAJ,GAAQ,yCAAR;AACA,UAAIC,IAAI,GAACH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAT;AACAE,MAAAA,IAAI,CAACC,SAAL;AAuBIL,MAAAA,GAAG,CAACM,WAAJ,CAAgBF,IAAhB;AACAH,MAAAA,QAAQ,CAACK,WAAT,CAAqBN,GAArB;AACP;;;6BACO;AACJ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAjCgBF,KAAK,CAACS,S;;AAmC3B,eAAeR,MAAf","sourcesContent":["import React from 'react';\n\nclass Pusher extends React.Component{\n    componentDidMount(){\n        let tag=document.createElement('script');\n        tag.src=\"https://js.pusher.com/4.1/pusher.min.js\";\n        let tag1=document.createElement('script');\n        tag1.innerText=` var pusher = new Pusher('your-app-key', { cluster: 'your-app-cluster' });\n\n        // retrieve the socket ID once we're connected\n        pusher.connection.bind('connected', function () {\n            // attach the socket ID to all outgoing Axios requests\n            axios.defaults.headers.common['X-Socket-Id'] = pusher.connection.socket_id;\n        });\n\n        // request permission to display notifications, if we don't alreay have it\n        Notification.requestPermission();\n        pusher.subscribe('notifications')\n                .bind('post_updated', function (post) {\n                    // if we're on the home page, show an \"Updated\" badge\n                    if (window.location.pathname === \"/\") {\n                        $('a[href=\"/posts/' + post._id + '\"]').append('<span class=\"badge badge-primary badge-pill\">Updated</span>');\n                    }\n                    var notification = new Notification(post.title + \" was just updated. Check it out.\");\n                    notification.onclick = function (event) {\n                        window.location.href = '/posts/' + post._id;\n                        event.preventDefault();\n                        notification.close();\n                    }\n                });`\n            tag.appendChild(tag1);\n            document.appendChild(tag);\n    }\n    render(){\n        return(<div></div>)\n    }\n}\nexport default Pusher;"]},"metadata":{},"sourceType":"module"}